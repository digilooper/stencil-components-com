/**
 * This is an autogenerated file created by the Stencil build process.
 * It contains typing information for all components that exist in this project
 * and imports for stencil collections that might be configured in your stencil.config.js file
 */

import '@stencil/core';

declare global {
  namespace JSX {
    interface Element {}
    export interface IntrinsicElements {}
  }
  namespace JSXElements {}

  interface HTMLStencilElement extends HTMLElement {
    componentOnReady(): Promise<this>;
    componentOnReady(done: (ele?: this) => void): void;

    forceUpdate(): void;
  }

  interface HTMLAttributes {}
}

import '@stencil/router';
import 'ionicons';

import {
  MatchResults,
} from '@stencil/router';

declare global {

  namespace StencilComponents {
    interface AppAppsGrid {
      'filter': string;
    }
  }

  interface HTMLAppAppsGridElement extends StencilComponents.AppAppsGrid, HTMLStencilElement {}

  var HTMLAppAppsGridElement: {
    prototype: HTMLAppAppsGridElement;
    new (): HTMLAppAppsGridElement;
  };
  interface HTMLElementTagNameMap {
    'app-apps-grid': HTMLAppAppsGridElement;
  }
  interface ElementTagNameMap {
    'app-apps-grid': HTMLAppAppsGridElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'app-apps-grid': JSXElements.AppAppsGridAttributes;
    }
  }
  namespace JSXElements {
    export interface AppAppsGridAttributes extends HTMLAttributes {
      'filter'?: string;
    }
  }
}


declare global {

  namespace StencilComponents {
    interface AppApps {

    }
  }

  interface HTMLAppAppsElement extends StencilComponents.AppApps, HTMLStencilElement {}

  var HTMLAppAppsElement: {
    prototype: HTMLAppAppsElement;
    new (): HTMLAppAppsElement;
  };
  interface HTMLElementTagNameMap {
    'app-apps': HTMLAppAppsElement;
  }
  interface ElementTagNameMap {
    'app-apps': HTMLAppAppsElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'app-apps': JSXElements.AppAppsAttributes;
    }
  }
  namespace JSXElements {
    export interface AppAppsAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface AppComponentGrid {
      'filter': string;
    }
  }

  interface HTMLAppComponentGridElement extends StencilComponents.AppComponentGrid, HTMLStencilElement {}

  var HTMLAppComponentGridElement: {
    prototype: HTMLAppComponentGridElement;
    new (): HTMLAppComponentGridElement;
  };
  interface HTMLElementTagNameMap {
    'app-component-grid': HTMLAppComponentGridElement;
  }
  interface ElementTagNameMap {
    'app-component-grid': HTMLAppComponentGridElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'app-component-grid': JSXElements.AppComponentGridAttributes;
    }
  }
  namespace JSXElements {
    export interface AppComponentGridAttributes extends HTMLAttributes {
      'filter'?: string;
    }
  }
}


declare global {

  namespace StencilComponents {
    interface AppComponentSingle {
      'match': MatchResults;
    }
  }

  interface HTMLAppComponentSingleElement extends StencilComponents.AppComponentSingle, HTMLStencilElement {}

  var HTMLAppComponentSingleElement: {
    prototype: HTMLAppComponentSingleElement;
    new (): HTMLAppComponentSingleElement;
  };
  interface HTMLElementTagNameMap {
    'app-component-single': HTMLAppComponentSingleElement;
  }
  interface ElementTagNameMap {
    'app-component-single': HTMLAppComponentSingleElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'app-component-single': JSXElements.AppComponentSingleAttributes;
    }
  }
  namespace JSXElements {
    export interface AppComponentSingleAttributes extends HTMLAttributes {
      'match'?: MatchResults;
    }
  }
}


declare global {

  namespace StencilComponents {
    interface AppHome {

    }
  }

  interface HTMLAppHomeElement extends StencilComponents.AppHome, HTMLStencilElement {}

  var HTMLAppHomeElement: {
    prototype: HTMLAppHomeElement;
    new (): HTMLAppHomeElement;
  };
  interface HTMLElementTagNameMap {
    'app-home': HTMLAppHomeElement;
  }
  interface ElementTagNameMap {
    'app-home': HTMLAppHomeElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'app-home': JSXElements.AppHomeAttributes;
    }
  }
  namespace JSXElements {
    export interface AppHomeAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface AppLearnList {
      'filter': string;
    }
  }

  interface HTMLAppLearnListElement extends StencilComponents.AppLearnList, HTMLStencilElement {}

  var HTMLAppLearnListElement: {
    prototype: HTMLAppLearnListElement;
    new (): HTMLAppLearnListElement;
  };
  interface HTMLElementTagNameMap {
    'app-learn-list': HTMLAppLearnListElement;
  }
  interface ElementTagNameMap {
    'app-learn-list': HTMLAppLearnListElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'app-learn-list': JSXElements.AppLearnListAttributes;
    }
  }
  namespace JSXElements {
    export interface AppLearnListAttributes extends HTMLAttributes {
      'filter'?: string;
    }
  }
}


declare global {

  namespace StencilComponents {
    interface AppLearn {

    }
  }

  interface HTMLAppLearnElement extends StencilComponents.AppLearn, HTMLStencilElement {}

  var HTMLAppLearnElement: {
    prototype: HTMLAppLearnElement;
    new (): HTMLAppLearnElement;
  };
  interface HTMLElementTagNameMap {
    'app-learn': HTMLAppLearnElement;
  }
  interface ElementTagNameMap {
    'app-learn': HTMLAppLearnElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'app-learn': JSXElements.AppLearnAttributes;
    }
  }
  namespace JSXElements {
    export interface AppLearnAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface AppPlugins {

    }
  }

  interface HTMLAppPluginsElement extends StencilComponents.AppPlugins, HTMLStencilElement {}

  var HTMLAppPluginsElement: {
    prototype: HTMLAppPluginsElement;
    new (): HTMLAppPluginsElement;
  };
  interface HTMLElementTagNameMap {
    'app-plugins': HTMLAppPluginsElement;
  }
  interface ElementTagNameMap {
    'app-plugins': HTMLAppPluginsElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'app-plugins': JSXElements.AppPluginsAttributes;
    }
  }
  namespace JSXElements {
    export interface AppPluginsAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface AppSubmit {

    }
  }

  interface HTMLAppSubmitElement extends StencilComponents.AppSubmit, HTMLStencilElement {}

  var HTMLAppSubmitElement: {
    prototype: HTMLAppSubmitElement;
    new (): HTMLAppSubmitElement;
  };
  interface HTMLElementTagNameMap {
    'app-submit': HTMLAppSubmitElement;
  }
  interface ElementTagNameMap {
    'app-submit': HTMLAppSubmitElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'app-submit': JSXElements.AppSubmitAttributes;
    }
  }
  namespace JSXElements {
    export interface AppSubmitAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface AppTools {
      'match': MatchResults;
    }
  }

  interface HTMLAppToolsElement extends StencilComponents.AppTools, HTMLStencilElement {}

  var HTMLAppToolsElement: {
    prototype: HTMLAppToolsElement;
    new (): HTMLAppToolsElement;
  };
  interface HTMLElementTagNameMap {
    'app-tools': HTMLAppToolsElement;
  }
  interface ElementTagNameMap {
    'app-tools': HTMLAppToolsElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'app-tools': JSXElements.AppToolsAttributes;
    }
  }
  namespace JSXElements {
    export interface AppToolsAttributes extends HTMLAttributes {
      'match'?: MatchResults;
    }
  }
}


declare global {

  namespace StencilComponents {
    interface AppUi {

    }
  }

  interface HTMLAppUiElement extends StencilComponents.AppUi, HTMLStencilElement {}

  var HTMLAppUiElement: {
    prototype: HTMLAppUiElement;
    new (): HTMLAppUiElement;
  };
  interface HTMLElementTagNameMap {
    'app-ui': HTMLAppUiElement;
  }
  interface ElementTagNameMap {
    'app-ui': HTMLAppUiElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'app-ui': JSXElements.AppUiAttributes;
    }
  }
  namespace JSXElements {
    export interface AppUiAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface MyApp {

    }
  }

  interface HTMLMyAppElement extends StencilComponents.MyApp, HTMLStencilElement {}

  var HTMLMyAppElement: {
    prototype: HTMLMyAppElement;
    new (): HTMLMyAppElement;
  };
  interface HTMLElementTagNameMap {
    'my-app': HTMLMyAppElement;
  }
  interface ElementTagNameMap {
    'my-app': HTMLMyAppElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'my-app': JSXElements.MyAppAttributes;
    }
  }
  namespace JSXElements {
    export interface MyAppAttributes extends HTMLAttributes {

    }
  }
}

declare global { namespace JSX { interface StencilJSX {} } }
